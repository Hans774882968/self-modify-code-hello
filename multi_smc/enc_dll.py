import pefile

peobj = pefile.PE('enc.dll')


def get_smc_funcs():
    candidate_funcs = [[symb.name.decode('utf-8'), symb.address] for symb in peobj.DIRECTORY_ENTRY_EXPORT.symbols]
    smc_funcs = list(filter(lambda x: 'can_get_flag' in x[0] or 'smc' in x[0], candidate_funcs))
    return smc_funcs


enc_keys = {
    'can_get_flag': [107, 50, 142, 41, 124, 82, 115, 38, 3, 94, 141, 186, 254, 226],
    'smc1': [68, 41, 223, 212, 96, 89, 4, 193, 75, 254, 194, 112, 62, 7],
    'smc2': [129, 50, 171, 174, 220, 135, 228, 185, 10, 41, 190, 89, 84, 253],
    'smc3': [58, 137, 226, 153, 117, 216, 152, 29, 210, 117, 161, 16, 131, 126],
    'smc4': [93, 237, 175, 121, 163, 98, 35, 199, 28, 77, 196, 153, 41, 149],
    'smc5': [55, 228, 83, 146, 49, 220, 225, 87, 135, 171, 147, 50, 87, 250],
    'smc6': [100, 27, 23, 191, 226, 10, 23, 58, 125, 86, 117, 233, 164, 87],
    'smc7': [190, 43, 219, 41, 214, 11, 22, 127, 138, 38, 112, 134, 76, 98],
    'smc8': [45, 93, 83, 192, 151, 8, 30, 21, 255, 228, 188, 79, 225, 11],
    'smc9': [139, 183, 212, 233, 200, 16, 46, 102, 122, 238, 117, 13, 63, 80],
    'smc10': [30, 206, 24, 1, 129, 67, 95, 26, 84, 217, 102, 127, 150, 174],
    'smc11': [29, 59, 192, 42, 217, 141, 165, 123, 17, 108, 246, 82, 201, 229],
    'smc12': [139, 108, 3, 206, 166, 223, 209, 253, 130, 106, 26, 170, 71, 25],
    'smc13': [181, 197, 131, 163, 179, 239, 196, 21, 134, 17, 0, 13, 28, 13],
    'smc14': [172, 49, 99, 157, 38, 253, 85, 41, 217, 196, 229, 174, 207, 136],
    'smc15': [47, 223, 0, 225, 24, 147, 94, 92, 77, 131, 197, 128, 149, 171],
    'smc16': [5, 56, 120, 235, 167, 120, 126, 40, 95, 213, 140, 19, 67, 19],
    'smc17': [9, 183, 32, 215, 47, 12, 11, 133, 89, 54, 239, 148, 225, 141],
    'smc18': [138, 126, 99, 8, 89, 0, 17, 63, 246, 49, 19, 177, 5, 185],
    'smc19': [89, 0, 113, 169, 38, 200, 210, 127, 203, 254, 204, 233, 40, 193],
    'smc20': [108, 142, 241, 165, 96, 23, 190, 71, 254, 5, 206, 126, 148, 109],
    'smc21': [10, 140, 16, 39, 215, 181, 229, 96, 83, 100, 57, 175, 165, 100],
    'smc22': [134, 19, 12, 17, 79, 28, 85, 67, 198, 249, 81, 237, 210, 173],
    'smc23': [179, 156, 175, 143, 103, 45, 185, 128, 74, 32, 181, 199, 102, 19],
    'smc24': [238, 45, 16, 220, 251, 186, 208, 90, 83, 247, 254, 51, 189, 252],
    'smc25': [199, 255, 94, 66, 224, 187, 254, 250, 6, 36, 190, 164, 235, 75],
    'smc26': [245, 172, 134, 227, 194, 223, 101, 241, 156, 48, 1, 175, 143, 96],
    'smc27': [148, 103, 171, 220, 164, 231, 252, 184, 122, 44, 99, 73, 122, 43],
    'smc28': [209, 84, 36, 177, 179, 77, 242, 222, 122, 253, 77, 41, 120, 186],
    'smc29': [29, 165, 56, 192, 72, 90, 191, 84, 231, 213, 132, 181, 197, 146],
    'smc30': [111, 83, 229, 128, 182, 211, 213, 50, 61, 96, 155, 139, 162, 120],
    'smc31': [54, 118, 145, 228, 128, 41, 148, 182, 25, 140, 155, 86, 81, 16],
    'smc32': [157, 105, 68, 82, 101, 243, 111, 17, 73, 201, 87, 23, 56, 134],
    'smc33': [190, 26, 187, 104, 117, 18, 223, 1, 4, 146, 132, 167, 102, 134],
    'smc34': [207, 151, 36, 174, 80, 26, 135, 197, 168, 249, 18, 232, 135, 246],
    'smc35': [121, 86, 73, 208, 123, 42, 138, 127, 12, 99, 191, 46, 130, 32],
    'smc36': [246, 26, 105, 186, 64, 234, 245, 54, 193, 124, 238, 41, 243, 215],
    'smc37': [154, 65, 204, 57, 97, 4, 54, 25, 253, 62, 58, 25, 184, 75],
    'smc38': [176, 98, 228, 43, 242, 93, 113, 196, 140, 228, 170, 229, 123, 11],
    'smc39': [44, 107, 191, 56, 16, 8, 27, 61, 45, 62, 13, 25, 200, 221],
    'smc40': [105, 0, 109, 153, 113, 46, 220, 162, 5, 44, 253, 15, 48, 190],
    'smc41': [82, 113, 125, 152, 225, 82, 97, 216, 86, 186, 109, 39, 200, 227],
    'smc42': [68, 37, 209, 200, 178, 247, 171, 189, 108, 178, 248, 191, 158, 50],
    'smc43': [124, 94, 244, 254, 176, 154, 167, 24, 193, 5, 140, 145, 221, 42],
    'smc44': [128, 51, 185, 222, 141, 68, 196, 194, 238, 103, 33, 219, 22, 139],
    'smc45': [148, 182, 130, 211, 115, 49, 153, 184, 216, 185, 180, 118, 22, 231],
    'smc46': [130, 34, 125, 222, 216, 115, 52, 0, 39, 129, 131, 207, 241, 98],
    'smc47': [1, 71, 182, 31, 111, 129, 122, 101, 30, 112, 241, 211, 250, 225],
    'smc48': [178, 221, 249, 23, 14, 72, 42, 177, 208, 19, 249, 220, 217, 170],
    'smc49': [135, 248, 253, 142, 214, 118, 180, 173, 79, 176, 253, 81, 194, 190],
    'smc50': [95, 196, 128, 4, 25, 18, 47, 105, 2, 46, 148, 246, 194, 185],
    'smc51': [223, 133, 185, 76, 21, 39, 218, 102, 71, 70, 118, 134, 200, 251],
    'smc52': [197, 154, 65, 202, 93, 230, 163, 20, 219, 225, 156, 220, 44, 147],
    'smc53': [1, 107, 95, 229, 157, 249, 167, 123, 143, 35, 181, 158, 177, 37],
    'smc54': [146, 32, 57, 111, 103, 90, 93, 222, 241, 6, 211, 174, 109, 54],
    'smc55': [88, 251, 25, 141, 205, 182, 209, 88, 128, 150, 103, 47, 42, 28],
    'smc56': [122, 193, 105, 237, 203, 207, 184, 154, 93, 245, 233, 153, 242, 87],
    'smc57': [6, 71, 37, 98, 179, 214, 24, 176, 15, 44, 50, 109, 134, 2],
    'smc58': [242, 199, 224, 70, 212, 177, 16, 121, 174, 223, 76, 220, 113, 69],
    'smc59': [77, 26, 25, 77, 206, 170, 33, 163, 196, 215, 39, 82, 56, 124],
    'smc60': [124, 2, 80, 111, 44, 151, 238, 202, 225, 199, 87, 230, 31, 31],
    'smc61': [241, 141, 109, 0, 119, 26, 2, 194, 196, 166, 82, 32, 51, 112],
    'smc62': [208, 198, 210, 16, 212, 214, 126, 90, 128, 45, 126, 105, 195, 98],
    'smc63': [119, 26, 25, 112, 132, 201, 103, 105, 46, 139, 132, 203, 202, 22],
    'smc64': [175, 112, 138, 120, 187, 4, 193, 109, 152, 19, 84, 252, 162, 184],
    'smc65': [142, 68, 139, 242, 182, 105, 225, 177, 88, 5, 160, 86, 152, 82],
    'smc66': [38, 135, 141, 102, 243, 214, 94, 112, 95, 1, 227, 149, 80, 186],
    'smc67': [5, 197, 87, 67, 182, 33, 98, 48, 226, 170, 245, 213, 31, 62],
    'smc68': [19, 11, 5, 147, 2, 105, 250, 103, 161, 194, 62, 39, 207, 205],
    'smc69': [199, 1, 245, 234, 39, 212, 68, 71, 100, 45, 183, 203, 84, 140],
    'smc70': [89, 220, 102, 115, 72, 101, 63, 81, 109, 205, 72, 101, 179, 227],
    'smc71': [52, 152, 87, 188, 13, 87, 45, 58, 11, 124, 136, 2, 79, 80],
    'smc72': [246, 85, 67, 39, 72, 64, 141, 223, 58, 195, 137, 194, 210, 146],
    'smc73': [122, 85, 125, 16, 87, 209, 161, 80, 143, 126, 195, 199, 32, 17],
    'smc74': [129, 86, 0, 16, 26, 48, 131, 143, 254, 253, 26, 156, 120, 170],
    'smc75': [126, 121, 228, 84, 16, 251, 249, 91, 225, 197, 78, 184, 199, 244],
    'smc76': [134, 97, 44, 74, 225, 40, 11, 165, 70, 108, 186, 71, 101, 98],
    'smc77': [62, 142, 225, 246, 236, 59, 172, 119, 200, 166, 112, 217, 225, 140],
    'smc78': [48, 30, 254, 233, 216, 218, 176, 51, 8, 241, 115, 191, 202, 206],
    'smc79': [144, 150, 18, 29, 225, 165, 228, 21, 187, 141, 238, 49, 147, 90],
    'smc80': [60, 103, 255, 237, 199, 241, 182, 192, 250, 57, 252, 58, 198, 112],
    'smc81': [54, 36, 5, 45, 190, 186, 168, 215, 207, 150, 28, 7, 198, 181],
    'smc82': [197, 7, 132, 217, 122, 92, 60, 64, 233, 240, 73, 33, 70, 188],
    'smc83': [54, 243, 250, 124, 13, 204, 212, 158, 164, 233, 70, 193, 193, 100],
    'smc84': [89, 96, 89, 156, 244, 120, 123, 124, 152, 157, 113, 42, 93, 170],
    'smc85': [100, 115, 165, 45, 183, 192, 121, 64, 200, 231, 1, 94, 66, 91],
    'smc86': [3, 4, 98, 215, 117, 126, 53, 49, 24, 183, 30, 42, 121, 212],
    'smc87': [58, 99, 119, 247, 203, 12, 149, 113, 100, 170, 221, 13, 67, 237],
    'smc88': [62, 164, 170, 54, 223, 150, 198, 224, 15, 13, 251, 195, 231, 227],
    'smc89': [167, 237, 235, 24, 65, 40, 197, 158, 150, 189, 51, 81, 218, 146],
    'smc90': [232, 224, 102, 131, 92, 39, 237, 241, 48, 172, 148, 93, 253, 108],
    'smc91': [119, 62, 60, 169, 195, 42, 39, 67, 79, 142, 12, 216, 119, 21],
    'smc92': [61, 213, 127, 168, 102, 136, 56, 149, 75, 69, 32, 254, 50, 149],
    'smc93': [205, 205, 131, 106, 253, 237, 104, 16, 59, 118, 228, 214, 236, 192],
    'smc94': [15, 11, 25, 0, 196, 107, 146, 14, 251, 73, 249, 184, 187, 207],
    'smc95': [103, 253, 50, 137, 75, 185, 108, 22, 167, 24, 12, 105, 240, 152],
    'smc96': [202, 207, 21, 141, 225, 76, 225, 194, 195, 237, 122, 20, 155, 28],
    'smc97': [199, 222, 5, 9, 172, 41, 144, 120, 249, 214, 222, 120, 233, 165],
    'smc98': [118, 154, 214, 36, 151, 52, 70, 143, 101, 28, 231, 255, 215, 197],
    'smc99': [157, 57, 26, 37, 94, 55, 185, 231, 174, 237, 147, 238, 205, 250],
    'smc100': [197, 53, 171, 36, 108, 75, 19, 139, 151, 52, 100, 202, 41, 192],
}


def enc(st, ed, enc_key):
    dat = peobj.get_data(st, ed - st + 1)
    res = bytes([v ^ enc_key[i % len(enc_key)] for i, v in enumerate(dat)])
    peobj.set_bytes_at_rva(st, res)


def main():
    smc_funcs = get_smc_funcs()
    print([[f[0], hex(f[1])] for f in smc_funcs])  # dbg
    sz1 = 0x25e
    sz2 = 0xf3
    for i, (func_name, st) in enumerate(smc_funcs):
        ed = st + (sz1 if func_name == 'can_get_flag' else sz2)
        enc_key = enc_keys[func_name]
        enc(st, ed, enc_key)
    res = peobj.write()
    with open('enc_e.dll', 'wb') as res_f:
        res_f.write(res)


if __name__ == '__main__':
    main()
